@use "../partial-indexer" as *;

// Box which has the widgets for user to spawn and configure stop watches
#SpawnStopWatchBox {
    @include mixin-render-stop-watch-body(8px);

    &:focus-within, &:focus                   {
        @include mixin-stop-watch-box-focus();
    }

    // Row in which the user can enter the name of a stop watch to spawn
    #SpawnLableField {
        

        display: grid;
        grid-template-columns: auto 1fr;
        
        // Lable for left from the input field
        p {
            margin-right: 10px;
            font-size: $spawner-lable-font-size;
            font-weight: bold;            
        }
    
        // Input field in which the user can enter the name of a stop watch
        #InputFieldLableStopWatch {
            @include mixin-reduce-border-to-bottom-color-bottom();
            width: $spawner-lable-field-width;
            height: 20px;
            font-size: 18px;
            align-self: center;            
        }

    }

    // Row which has all buttons to spawn and config a stop watch
    #SpawnManage-btnS {
        display: grid;
        grid-template: 
        "spawnBtn counterArrowSpawn countDirectionBtn . inputTimeCont . trashAllBtn" auto
        / auto auto auto 1fr auto 1fr auto ;

        column-gap: $spawner-btn-bar-column-gap;
        
        $tmp-bc: $btn-background-color;
        $tmp-padding: 5px;

        // Button which spawns a stop watch if clicked
        #spawn-btn {
            grid-area: spawnBtn;
        }

        // Arrow icon which points down or up for showing which direction
        // the next stop watch will count
        #counter-arrow-spawn {
            grid-area: counterArrowSpawn;
            font-size: $spawner-btn-counter-arrow-size;
        }
        
        // Button to toggle counting direction of next stop watch
        #check-count-direction {
            grid-area: countDirectionBtn;
            align-self: center;


            width: max-content;

            background-color: $tmp-bc;

            @include mixin-give-thin-border();

            font-weight: bold;
            height: $spawner-count-direction-btn-height;
            padding: 10px;
            
                
        }

        // Box which has the input fields for the starting time of next stop watch
        #cont-time-input {
            grid-area: inputTimeCont;
            background-color: $tmp-bc;
            display: grid;
            grid-template: 
            "startTime hours minutes seconds" auto
            "startTime inputHours inputMinutes inputSeconds" auto
            / auto; 
            
            align-items: center;
            justify-items: center;
            column-gap: $time-input-field-column-gap;
            
            padding: $time-input-field-padding;
            
            @include mixin-give-thin-border();

            // Labels for saying ths "starting time", "hours", "minutes" 
            // and "seconds"

            p {
                font-weight: bold;                
            }

            // input fields for starting time (seconds, minutes and hours)
            input {
                width: $time-input-field-input-width;
                border-radius: $time-input-field-input-border-radius;                                
            }

            // Grid-Area declaration of the input fields and lables 
            #lable- {
                &start {
                    grid-area: startTime;
                }

                &seconds {
                    grid-area: seconds;
                }

                &minutes {
                    grid-area: minutes;
                }

                &hours {
                    grid-area: hours;
                }
            }

            #input- {
                &seconds {
                    grid-area: inputSeconds;
                }

                &minutes {
                    grid-area: inputMinutes;
                }

                &hours {
                    grid-area: inputHours;
                }   
            }
        }
    
        // Button to remove all stop watches
        #TrashAllButtons {
            grid-area: trashAllBtn;
            display: grid;
            grid-template-columns: repeat(3, auto);            
            
            // Symbols to represent that action
            .trash-can {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
    
            .btn.list {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
    
            .arrow-trash {
                border-radius: 0;
            }
                
        }
                       
    }

}

// tablet-size

@media screen and (max-width: 900px) {
        
    #SpawnStopWatchBox {

        #SpawnLableField {

            grid-template-rows: auto auto;
            grid-template-columns: 1fr;
            row-gap: $spawner-lable-field-row-gap-tab;
        }

        #SpawnManage-btnS {
            display: grid;
            grid-template:
            "spawnBtn counterArrowSpawn countDirectionBtn  trashAllBtn" auto
            "inputTimeCont inputTimeCont inputTimeCont inputTimeCont" auto
            / auto auto  1fr auto;
            row-gap: 15px;

            #TrashAllButtons i {
                @include mixin-margin-sides(0px);
            }
            
        }

        
    
    }

}

// mobile-size

@media screen and (max-width: 450px) {

    #SpawnStopWatchBox {

        
        #SpawnLableField {

            #InputFieldLableStopWatch {
                width: $spawner-lable-field-width-mob;
            }
        }

        #SpawnManage-btnS {
            display: grid;
            grid-template:
            "spawnBtn counterArrowSpawn countDirectionBtn " auto
            "inputTimeCont inputTimeCont inputTimeCont " auto
            "trashAllBtn trashAllBtn trashAllBtn" auto           
            / auto auto auto auto;
            row-gap: $spawner-btn-bar-row-gap-mob;
            column-gap: $spawner-btn-bar-column-gap-mob;

            #cont-time-input {
                
                grid-template: 
                    " startTime startTime" auto
                    " seconds inputSeconds " auto
                    " minutes inputMinutes " auto
                    " hours inputHours" auto
                    / auto auto;
                
                row-gap:  $spawner-input-start-time-row-gab-mob;

            }
        }

       
    }
    
}