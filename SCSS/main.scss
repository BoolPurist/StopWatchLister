@use "variables" as *;
@use "mixin" as *;
@use "base" as *;

.fas {
    font-size: 2rem;                        
    margin: auto;
}

.btn {
    background-color: $btn-background-color;
    padding: $btn-padding;
    border-radius: $btn-border-radius;
    opacity: 100%;
}

.btn.minorFocus {
    opacity: 50%;
}

#navTop {
    justify-self: end;
    
    display: grid;
    grid-auto-flow: column;
    grid-template-rows: auto;
    
    
    align-items: center;

    background-color: $sub-background-color;

    a { 
        $navTopA-height: 50px;
        height: $navTopA-height;
        line-height: $navTopA-height;

        @include mixin-padding-sides($navBar-side-padding-desktop);

        color: $sub-foreground-color;

        border-style: $navbar-style;
        border-width: $navbar-width;
        border-color: $navBar-border-color;
    }

    a:hover {
        color: $sub-background-color;
        background-color: grey;
    }

}

h1 {
    justify-self: center;
    font-size: 3rem;    
}

#SpawnStopWatchBox {
    @include mixin-render-stop-watch-body(8px);

    #SpawnLableField {
        
        display: grid;
        grid-template-columns: auto 1fr;
        
    
        p {
            margin-right: 10px;
            font-size: $spawner-lable-font-size;
            font-weight: bold;
        }
    
        input {
            @include mixin-reduce-border-to-bottom-color-bottom();
            width: 20ch
        }
    }

    #SpawnManage-btnS {
        display: grid;
        grid-template: 
        "spawnBtn countDirectionBtn inputTimeCont . trashAllBtn" auto
        / auto auto auto 1fr auto ;
        //grid-template-columns: repeat(3, auto) 1fr auto;
        column-gap: 10px;
        
        $tmp-bc: $btn-background-color;
        $tmp-padding: 5px;

        #spawn-btn {
            grid-area: spawnBtn;
        }

        #check-count-direction {
            grid-area: countDirectionBtn;
            align-self: center;


            width: max-content;

            background-color: $tmp-bc;

            @include mixin-render-alternative-rendering();

            font-weight: bold;
            height: 65%;
            padding: $tmp-padding;
                
        }

        #cont-time-input {
            grid-area: inputTimeCont;
            background-color: $tmp-bc;
            display: grid;
            grid-template: 
            "startTime hours minutes seconds" auto
            "startTime inputHours inputMinutes inputSeconds" auto
            / auto; 
            
            align-items: center;
            justify-items: center;
            column-gap: $time-input-field-column-gap;
            
            padding: $time-input-field-padding;
            
            @include mixin-render-alternative-rendering();

            p {
                font-weight: bold;
                
            }

            input {
                width: $time-input-field-input-width;
                border-radius: 5px;                                
            }

            #lable- {
                &start {
                    grid-area: startTime;
                }

                &seconds {
                    grid-area: seconds;
                }

                &minutes {
                    grid-area: minutes;
                }

                &hours {
                    grid-area: hours;
                }
            }

            #input- {
                &seconds {
                    grid-area: inputSeconds;
                }

                &minutes {
                    grid-area: inputMinutes;
                }

                &hours {
                    grid-area: inputHours;
                }   
            }
        }
    
        #TrashAllButtons {
            grid-area: trashAllBtn;
            display: grid;
            grid-template-columns: repeat(3, auto);            
            
            .trash-can {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
    
            .btn.list {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
    
            .arrow-trash {
                border-radius: 0;
            }
                
        }
                       
    }

}

.separation-bar {
    width: 100%;
    height: 20px;
    border-radius: $widget-border-radius;
    background-color: $separations-bar-color;    
}

#stop-watch-list {
    display:grid;
    grid-auto-rows: auto;
    row-gap: 10px;

    .stop-watch {
        @include mixin-render-stop-watch-body(-5px);
    
        .stop-watch-row-label{
            display: grid;
            grid-template-columns: 1fr auto;
            gap: 10px;
    
            p {
                @include mixin-stop-watch-font();
                text-decoration: underline;
            }
    
            .trash-btn {
                align-self: center;                
            }
        }
    
        .stop-watch-row-timer {
            display: grid;
            grid-template-columns: repeat(3, auto) 1fr;
            
            gap: 10px;
            align-items: center;
                            
            .text-timer {
                justify-self: center;
                @include mixin-stop-watch-font();
                font-size: $stop-watch-time-font-size;
            }
        }
    
    }
}


@media screen and (max-width: 850px) {
        
    #navTop {
        justify-self: center;
        
        a {
            @include mixin-padding-sides($navBar-side-padding-mobile);
        }
    }

    #SpawnStopWatchBox {


        #SpawnManage-btnS {
            display: grid;
            grid-template:
            "spawnBtn countDirectionBtn . trashAllBtn" auto
            "inputTimeCont inputTimeCont inputTimeCont inputTimeCont" auto
            / auto auto 1fr auto;
            row-gap: 15px;

            #cont-time-input {
                column-gap: 5px;
            }

            #TrashAllButtons i {
                @include mixin-margin-sides(0px);
            }
            
        }
    
    }

}



