@use "variables" as *;
@use "mixin" as *;
@use "base" as *;

.fas {
    font-size: 2rem;                        
    margin: auto;

}

.fa-angle-double-up {
    color: green;
}

.fa-angle-double-down {
    color: red;
}




.btn {
    background-color: $btn-background-color;
    padding: $btn-padding;
    border-radius: $btn-border-radius;
    opacity: 100%;
}

.btn.minorFocus {
    opacity: 50%;
}

#navTop {
    justify-self: end;
    
    display: grid;
    grid-auto-flow: column;
    grid-template-rows: auto;
    
    
    align-items: center;

    background-color: $sub-background-color;

    a { 
        $navTopA-height: 50px;
        height: $navTopA-height;
        line-height: $navTopA-height;

        @include mixin-padding-sides($navBar-side-padding-desktop);

        color: $sub-foreground-color;

        border-style: $navbar-style;
        border-width: $navbar-width;
        border-color: $navBar-border-color;
    }

    a:hover {
        color: $sub-background-color;
        background-color: grey;
    }

}

h1 {
    justify-self: center;
    font-size: 3rem;    
}


#SpawnStopWatchBox {
    @include mixin-render-stop-watch-body(8px);

    #SpawnLableField {
        
        display: grid;
        grid-template-columns: auto 1fr;
        
    
        p {
            margin-right: 10px;
            font-size: $spawner-lable-font-size;
            font-weight: bold;
            
        }
    
        input {
            @include mixin-reduce-border-to-bottom-color-bottom();
            width: 40ch;
            height: 20px;
            font-size: 18px;
            align-self: center;
            
        }
    }

    #SpawnManage-btnS {
        display: grid;
        grid-template: 
        "spawnBtn counterArrowSpawn countDirectionBtn . inputTimeCont . trashAllBtn" auto
        / auto auto auto 1fr auto 1fr auto ;
        //grid-template-columns: repeat(3, auto) 1fr auto;
        column-gap: $spawner-btn-bar-column-gap;
        
        $tmp-bc: $btn-background-color;
        $tmp-padding: 5px;

        #spawn-btn {
            grid-area: spawnBtn;
        }

        #counter-arrow-spawn {
            grid-area: counterArrowSpawn;
            font-size: $spawner-btn-counter-arrow-size;
        }
        

        #check-count-direction {
            grid-area: countDirectionBtn;
            align-self: center;


            width: max-content;

            background-color: $tmp-bc;

            @include mixin-render-alternative-rendering();

            font-weight: bold;
            height: 65%;
            padding: $tmp-padding;
                
        }

        #cont-time-input {
            grid-area: inputTimeCont;
            background-color: $tmp-bc;
            display: grid;
            grid-template: 
            "startTime hours minutes seconds" auto
            "startTime inputHours inputMinutes inputSeconds" auto
            / auto; 
            
            align-items: center;
            justify-items: center;
            column-gap: $time-input-field-column-gap;
            
            padding: $time-input-field-padding;
            
            @include mixin-render-alternative-rendering();

            p {
                font-weight: bold;
                
            }

            input {
                width: $time-input-field-input-width;
                border-radius: 5px;                                
            }

            #lable- {
                &start {
                    grid-area: startTime;
                }

                &seconds {
                    grid-area: seconds;
                }

                &minutes {
                    grid-area: minutes;
                }

                &hours {
                    grid-area: hours;
                }
            }

            #input- {
                &seconds {
                    grid-area: inputSeconds;
                }

                &minutes {
                    grid-area: inputMinutes;
                }

                &hours {
                    grid-area: inputHours;
                }   
            }
        }
    
        #TrashAllButtons {
            grid-area: trashAllBtn;
            display: grid;
            grid-template-columns: repeat(3, auto);            
            
            .trash-can {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
    
            .btn.list {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
    
            .arrow-trash {
                border-radius: 0;
            }
                
        }
                       
    }

}

.error-bar-start-time {
  background-color: rgb(175, 28, 28);
  border-radius: $widget-border-radius;
  padding: 10px;

  p {
      font-weight: bold;
      font-size: 2rem;
      color: white;
      text-align: center;
  }
}

.separation-bar {
    width: 100%;
    height: 20px;
    border-radius: $widget-border-radius;
    background-color: $separations-bar-color;    
}

#stop-watch-list {
    display:grid;
    grid-auto-rows: auto;
    row-gap: 10px;

    .stop-watch {
        @include mixin-render-stop-watch-body(-5px);
    
        .stop-watch-row-label{
            display: grid;
            grid-template-columns: 1fr auto;
            gap: 10px;
    
            p {
                @include mixin-stop-watch-font();
                text-decoration: underline;
            }
    
            .trash-btn {
                align-self: center;                
            }
        }
    
        .stop-watch-row-timer {
            display: grid;
            grid-template: 
            "playBtn pauseBtn resetBtn . counterArrow textTimer ." auto
            / auto auto auto 1fr auto auto 1fr;
            
            gap: 10px;
            align-items: center;
                            
            .text-timer {
                justify-self: right;
                @include mixin-stop-watch-font();
                font-size: $stop-watch-time-font-size;
            }

            .play-btn {
                grid-area: playBtn;
            }

            .pause-btn {
                grid-area: pauseBtn;
            }

            .reset-btn {
                grid-area: resetBtn;
            }

            .counter-arrow {
                grid-area: counterArrow;
                font-size: 3rem;
            }

            .text-timer {
                grid-area: textTimer;
            }

        }
    
    }
}


@media screen and (max-width: 900px) {
        
    #navTop {
        justify-self: center;
        
        a {
            @include mixin-padding-sides($navBar-side-padding-mobile);
        }
    }

    #SpawnStopWatchBox {

        #SpawnLableField {

            grid-template-rows: auto auto;
            grid-template-columns: 1fr;
            row-gap: 10px;
        }


        #SpawnManage-btnS {
            display: grid;
            grid-template:
            "spawnBtn counterArrowSpawn countDirectionBtn  trashAllBtn" auto
            "inputTimeCont inputTimeCont inputTimeCont inputTimeCont" auto
            / auto auto  1fr auto;
            row-gap: 15px;

            #cont-time-input {
                column-gap: 5px;
            }

            #TrashAllButtons i {
                @include mixin-margin-sides(0px);
            }
            
        }
    
    }

}

@media screen and (max-width: 550px) {
    #SpawnStopWatchBox {

        #SpawnLableField {

            p {
                font-size: 16px;
            }
        }
    }
        
            

}

@media screen and (max-width: 450px) {

    #SpawnStopWatchBox {

        
        #SpawnLableField {

            input {
                width: 30ch;
            }
        }

        #SpawnManage-btnS {
            display: grid;
            grid-template:
            "spawnBtn counterArrowSpawn countDirectionBtn trashAllBtn" auto
            "inputTimeCont inputTimeCont inputTimeCont inputTimeCont" auto            
            / auto auto auto auto;
            row-gap: 15px;
            column-gap: $spawner-btn-bar-column-gap-mob;

            #cont-time-input {
                
                grid-template: 
                    ". startTime ." auto
                    "seconds minutes hours" auto
                    "inputSeconds inputMinutes inputHours" auto
                    / auto auto auto;
                
                row-gap:  5px;

            }
        }

    }

    #stop-watch-list {
        .stop-watch {

            .stop-watch-row-timer { 
                display: grid;                       
                grid-template: 
                "  playBtn pauseBtn  . " auto
                "resetBtn  counterArrow textTimer " auto
                / auto auto auto auto 1fr;                                   
            }
        
        }

    }
    
}

